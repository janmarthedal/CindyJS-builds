/**
 * @license
 *
 * Complex Curves
 *
 * Copyright 2016 Stefan Kranich
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
(function(){
'use strict';var k,r={"Assembly.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform sampler2D samplers[1 + N/2];\nuniform float sheet;\nvarying float which;\nvarying vec2 texCoord[3];\n\nvoid readTex (out vec2 pos[3], out float delta[3], out vec2 values[3*N]) {\n    vec4 s;\n    for (int i = 0; i < 3; i++) {\n        s = texture2D (samplers[0], texCoord[i]);\n        pos[i] = s.xy;\n        delta[i] = s.z;\n        for (int j = 1; j < N/2; j++) {\n            s = texture2D (samplers[j], texCoord[i]);\n            values[i*N+2*j-2] = s.xy;\n            values[i*N+2*j-1] = s.zw;\n        }\n    }\n}\n\nbool valid (in vec2 position[3], in float delta[3]) {\n    return distance (position[0], position[1]) < min (delta[0], delta[1])\n    && distance (position[1], position[2]) < min (delta[1], delta[2])\n    && distance (position[2], position[0]) < min (delta[2], delta[0]);\n}\n\nvoid main(void) {\n    int isheet = int(sheet);\n    if (isheet < sheets) {\n        vec2 pos[3];\n        float delta[3];\n        vec2 values[3*N];\n        readTex (pos, delta, values);\n        if (valid (pos, delta)) {\n            for (int s = 0; s < sheets; s++) {\n                if (s == isheet) {\n                    vec2 valueA = values[s];\n                    int iwhich = int(which);\n                    for (int w = 0; w < 3; w++) {\n                        if (w == iwhich) {\n                            vec2 valueWhich = values[w*N];\n                            float dist, minDist = distance (valueA, valueWhich);\n                            for (int i = 1; i < sheets; i++) {\n                                dist = distance (valueA, values[w*N+i]);\n                                if (dist < minDist)\n                                {\n                                    valueWhich = values[w*N+i];\n                                    minDist = dist;\n                                }\n                            }\n                            gl_FragColor = vec4(pos[w], valueWhich);\n                        }\n                    }\n                }\n            }\n        return;\n        }\n    }\n    gl_FragColor = vec4(-10.0, -10.0, -10.0, 1.0);\n}\n",
"Assembly.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute float index;\nuniform float numIndices;\nuniform float sheet;\nvarying vec2 texCoord[3];\nvarying float which;\n\nvoid main (void) {\n    gl_Position = indexedPosition (sheet * numIndices + index);\n    which = mod (index, 3.0);\n    texCoord[0] = uvPosition (index - which);\n    texCoord[1] = uvPosition (index - which + 1.0);\n    texCoord[2] = uvPosition (index - which + 2.0);\n}\n",
"CachedSurface.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform bool clipping;\nvarying vec4 vPos;\nvarying vec2 vValue;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    if (clipping && vPos.y < 0.0)\n        discard;\n    float PI = acos (-1.0);\n    float angle = atan (vValue.y, vValue.x);\n    float blackp = sawfct (angle, PI / 12.0, 0.7, 1.0);\n    float blackm = sawfct (log (length (vValue)), PI / 12.0, 0.7, 1.0);\n    float black = blackp * blackm;\n    gl_FragColor = vec4 (black * hue_to_rgb (angle), gl_FragCoord.z);\n}\n",
"CachedSurface.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute vec4 position;\nuniform mat4 m, v, p;\nvarying vec4 vPos;\nvarying vec2 vValue;\nvoid main (void)\n{\n    vPos = vec4 (position.xyz, 1.0);\n    vValue = position.zw;\n    gl_Position = p * v * m * vPos;\n}\n","Common.glsl":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#define EPS 5e-3\n\n/* complex division */\nvec2 cd (in vec2 a, in vec2 b) {\n\treturn vec2 (a.x * b.x + a.y * b.y, a.y * b.x - a.x * b.y) / dot (b, b);\n}\n\nvec2 cinv (in vec2 z) {\n    return vec2(z.x, -z.y) / dot(z, z);\n}\n\n/* complex square root */\nvec2 csqrt (in vec2 z)\n{\n    float r = sqrt (length (z));\n    float phi = 0.5 * atan (z.y, z.x);\n    return r * vec2 (cos (phi), sin (phi));\n}\n\nvec2 horner (in int n, in vec2 cs[N+1], in vec2 x) {\n    vec2 p;\n    for (int i = N - 1; i >= 0; i--)\n        if (i >= n)\n            p = cs[i];\n        else if (i < n)\n            p = cs[i] + cm(p, x);\n    return p;\n}\n\nvoid weierstrass (in vec2 cs[N+1], out vec2 roots2[N]) {\n\t/* polynomial must be monic! */\n    vec2 csn = cs[sheets];\n    if (csn != vec2 (1.0, 0.0))\n        for (int i = 0; i <= sheets; i++)\n            cs[i] = cd (cs[i], csn);\n\n    float maxabs = length (cs[0]);\n    for (int i = 1; i < N; i++)\n        if (i < sheets)\n            maxabs = max (maxabs, length (cs[i]));\n    float upperBound = 1.0 + maxabs; /// length (cs[n]);\n    float phi = 2.0 * acos (-1.0) / float (sheets + 1);\n    float d = upperBound / float (sheets);\n    d = clamp (d, 1.0, 10.0);\n\tfor (int i = 0; i < sheets; i++)\n        roots2[i] = float (i) * d * vec2 (cos (float (i) * phi), sin (float (i) * phi));\n\n\tconst int maxiter = 50;\n\tbool changing;\n\tfor (int iter = 0; iter < maxiter; iter++)\n\t{\n\t\tchanging = false;\n\t\tfor (int i = 0; i < sheets; i++)\n        {\n            vec2 result = vec2 (1.0, 0.0);\n            for (int j = 0; j < sheets; j++)\n                if (j != i)\n                    result = cm (result, roots2[i] - roots2[j]);\n            vec2 update = cd (horner (sheets, cs, roots2[i]), result);\n            ///* safe-guard against large update */\n            //if (sheets > 1 && length (update) > 10)\n            //\tupdate /= length (update);\n            if (length (update) > 1e-2)\n                changing = true;\n            roots2[i] -= update;\n        }\n        if (!changing)\n            break;\n\t}\n}\n\nvoid quadratic_roots (in vec2 cs[N+1], out vec2 qroots[2]) {\n    if (cs[0] == vec2 (0.0, 0.0)) {\n        qroots[0] = vec2 (0.0, 0.0);\n        qroots[1] = -cd (cs[1], cs[2]);\n    }\n    else\n    {\n        vec2 r = csqrt (cm (cs[1], cs[1]) - 4.0 * cm (cs[2], cs[0]));\n        if (cs[1].x >= 0.0)\n            r = -r;\n        qroots[0] = cd (r - cs[1], 2.0 * cs[2]);\n        qroots[1] = cd (2.0 * cs[0], r - cs[1]);\n    }\n}\n\nvoid roots (in int n, in vec2 cs[N+1], out vec2 roots[N])\n{\n    if (n == 1) {\n        roots[0] = -cd (cs[0], cs[1]);\n        return;\n    }\n    if (n == 2) {\n        vec2 qroots[2];\n        quadratic_roots (cs, qroots);\n        roots[0] = qroots[0];\n        roots[1] = qroots[1];\n        return;\n    }\n    weierstrass (cs, roots);\n    /* selection sort by real part */\n    /*\n    for(int i = 0; i < n - 1; i++)\n    {\n        int jmin = i;\n        for (int j = i + 1; j < n; j++)\n            if (roots[j].x < roots[jmin].x)\n                jmin = j;\n        vec2 z = roots[i];\n        roots[i] = roots[jmin];\n        roots[jmin] = z;\n    }\n    */\n}\n\nvoid f (in vec2 x, out vec2 cs[N+1]);\nvec2 fx (in vec2 x, in vec2 y);\nvec2 fy (in vec2 x, in vec2 y);\nfloat rho (in vec2 x);\nfloat M (in vec2 x, in float rho);\n\nfloat epsilon (in vec2 ys[N]) {\n    float d = distance (ys[0], ys[1]);\n    for (int j = 0; j < sheets; j++) {\n        for (int k = 0; k < sheets; k++) {\n            if (k > j)\n                d = min (d, distance (ys[j], ys[k]));\n        }\n    }\n    return d / 2.0;\n}\n\nfloat Y (in vec2 x, in vec2 ys[N]) {\n    float y = length (cd (fx (x, ys[0]), fy (x, ys[0])));\n    for (int j = 0; j < sheets; j++)\n        y = max (y, length (cd (fx (x, ys[j]), fy (x, ys[j]))));\n    return y;\n}\n\nfloat Delta (in vec2 x, in vec2 ys[N]) {\n    float eps = epsilon (ys);\n    float r = rho (x);\n    float m = M (x, r);\n    float y = Y (x, ys);\n    return r * (sqrt (pow (r * y - eps, 2.0) + 4.0 * eps * m) -\n        (r * y + eps)) / (2.0 * (m - r * y));\n}\n",
"DomainColouring.frag":"uniform int sheet;\nvarying vec2 vPosition;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    vec2 cs[N+1];\n    vec2 ys[N];\n    vec2 value;\n    f (vPosition, cs);\n    roots (sheets, cs, ys);\n    int smaller;\n    for (int i = 0; i < sheets; i++)\n    {\n        smaller = 0;\n        for (int j = 0; j < sheets; j++)\n            if (ys[j].x < ys[i].x)\n                smaller++;\n        if (smaller == sheet - 1)\n            value = ys[i];\n    }\n        \n    float PI = acos (-1.0);\n    float angle = atan (value.y, value.x);\n    float blackp = sawfct (angle, PI / 12.0, 0.7, 1.0);\n    float blackm = sawfct (log (length (value)), PI / 12.0, 0.7, 1.0);\n    float black = blackp * blackm;\n    gl_FragColor = vec4 (black * hue_to_rgb(angle), 1.0);\n}\n",
"DomainColouring.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute vec2 position;\nvarying vec2 vPosition;\nvoid main () {\n    gl_Position = vec4 (position, 0.0, 1.0);\n    vPosition = 5.0 * position;\n}\n","Export.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nvarying vec2 vValue;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    float PI = acos (-1.0);\n    float angle = atan (vValue.y, vValue.x);\n    float blackp = sawfct (angle / (2.0 * PI), 0.05, 0.7, 1.0);\n    float blackm = sawfct (log (length (vValue)), 0.1 * PI, 0.7, 1.0);\n    float black = blackp * blackm;\n    gl_FragColor = vec4 (black * hue_to_rgb(angle), 1.0);\n}\n",
"Export.vert":"uniform float maxValue;\nuniform float minValue;\nattribute vec2 vPosition;\nvarying vec2 vValue;\n\nvoid main()\n{\n  gl_Position = vec4(vPosition, 0.0, 1.0);\n  vValue = 0.5 * (maxValue - minValue) * (vPosition + vec2 (1.0, 1.0))\n    + vec2 (minValue, minValue);\n}\n","FXAA.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform sampler2D u_tex;\nuniform float width;\nuniform float height;\n\n#define FXAA_REDUCE_MIN (1.0/ 128.0)\n#define FXAA_REDUCE_MUL (1.0 / 8.0)\n#define FXAA_SPAN_MAX 8.0\n// from https://github.com/mitsuhiko/webgl-meincraft/blob/master/assets/shaders/fxaa.glsl\nvec4 applyFXAA(in vec2 fragCoord, in sampler2D tex)\n{\n    vec4 color;\n    vec2 inverseVP = vec2(1.0 / width, 1.0 / height);\n    vec3 rgbNW = texture2D(tex, (fragCoord + vec2(-1.0, -1.0)) * inverseVP).xyz;\n    vec3 rgbNE = texture2D(tex, (fragCoord + vec2(1.0, -1.0)) * inverseVP).xyz;\n    vec3 rgbSW = texture2D(tex, (fragCoord + vec2(-1.0, 1.0)) * inverseVP).xyz;\n    vec3 rgbSE = texture2D(tex, (fragCoord + vec2(1.0, 1.0)) * inverseVP).xyz;\n    vec3 rgbM = texture2D(tex, fragCoord * inverseVP).xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM = dot(rgbM, luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n    (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n    max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n    dir * rcpDirMin)) * inverseVP;\n    vec3 rgbA = 0.5 * (\n    texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n    texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n    texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n    texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, 1.0);\n    else\n        color = vec4(rgbB, 1.0);\n    return color;\n}\n\nvoid main (void)\n{\n    gl_FragColor = applyFXAA(gl_FragCoord.xy, u_tex);\n}\n",
"FXAA.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute vec2 vPosition;\nvoid main()\n{\n  gl_Position = vec4(vPosition, 0.0, 1.0);\n}\n","Initial.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform int computedRoots;\nvarying vec2 texCoord;\nvarying vec2 vPosition;\nvoid main(void) {\n    vec2 position = clamp (vPosition, -5.0, 5.0);\n    vec2 values[N];\n    vec2 cs[N+1];\n    f (position, cs);\n    roots (sheets, cs, values);\n\n    if (computedRoots < sheets) {\n        for (int i = 0; i < N; i += 2) {\n            if (i == computedRoots)\n                if (computedRoots + 1 < sheets)\n                    gl_FragColor = vec4(values[i], values[i + 1]);\n                else\n                    gl_FragColor = vec4(values[i], vec2 (0.0, 0.0));\n        }\n    } else {\n        float delta = Delta (position, values);\n        gl_FragColor = vec4 (position, delta, 1.0);\n    }\n}\n",
"Initial.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute float index;\nattribute vec2 position;\nvarying vec2 texCoord;\nvarying vec2 vPosition;\nvoid main (void) {\n    vPosition = position;\n    gl_Position = indexedPosition (index);\n    texCoord = uvPosition (index);\n}\n","Subdivision.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform int computedRoots;\nuniform sampler2D oldSamplers[1 + N/2];\nvarying vec3 barycentric;\nvarying vec2 texCoord[3];\nvarying vec2 texCoordOut;\n\nvoid main(void) {\n    if (barycentric == vec3 (1.0, 0.0, 0.0)) {\n        if (computedRoots >= sheets) {\n            gl_FragColor = texture2D (oldSamplers[0], texCoord[0]);\n        } else {\n            int i = computedRoots / 2 + 1;\n            for (int j = 1; j < 1 + N/2; j++)\n                if (j == i)\n                    gl_FragColor = texture2D (oldSamplers[j], texCoord[0]);\n        }\n    } else if (barycentric == vec3 (0.0, 1.0, 0.0)) {\n        if (computedRoots >= sheets) {\n            gl_FragColor = texture2D (oldSamplers[0], texCoord[1]);\n        } else {\n            int i = computedRoots / 2 + 1;\n            for (int j = 1; j < 1 + N/2; j++)\n                if (j == i)\n                    gl_FragColor = texture2D (oldSamplers[j], texCoord[1]);\n        }\n    } else if (barycentric == vec3 (0.0, 0.0, 1.0)) {\n        if (computedRoots >= sheets) {\n            gl_FragColor = texture2D (oldSamplers[0], texCoord[2]);\n        } else {\n            int i = computedRoots / 2 + 1;\n            for (int j = 1; j < 1 + N/2; j++)\n                if (j == i)\n                    gl_FragColor = texture2D (oldSamplers[j], texCoord[2]);\n        }\n    } else {\n        vec2 values[N];\n        vec2 position = barycentric.x * texture2D (oldSamplers[0], texCoord[0]).xy\n                      + barycentric.y * texture2D (oldSamplers[0], texCoord[1]).xy\n                      + barycentric.z * texture2D (oldSamplers[0], texCoord[2]).xy;\n        vec2 cs[N+1];\n        f (position, cs);\n        roots (sheets, cs, values);\n\n        if (computedRoots < sheets) {\n            for (int i = 0; i < N; i += 2) {\n                if (i == computedRoots)\n                    if (computedRoots + 1 < sheets)\n                        gl_FragColor = vec4(values[i], values[i + 1]);\n                    else\n                        gl_FragColor = vec4(values[i], vec2 (0.0, 0.0));\n            }\n        } else {\n            float delta = Delta (position, values);\n            gl_FragColor = vec4 (position, delta, 1.0);\n        }\n    }\n}\n",
"Subdivision.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute vec4 indexBarycentric;\nattribute float indexOffsetIn;\nattribute float indexOffsetOut;\nvarying vec3 barycentric;\nvarying vec2 texCoord[3];\nvarying vec2 texCoordOut;\n\nvoid main (void) {\n    float indexOut = indexBarycentric.x + indexOffsetOut;\n    gl_Position = indexedPosition (indexOut);\n    barycentric = indexBarycentric.yzw;\n    texCoord[0] = uvPosition (indexOffsetIn);\n    texCoord[1] = uvPosition (indexOffsetIn + 1.0);\n    texCoord[2] = uvPosition (indexOffsetIn + 2.0);\n    texCoordOut = uvPosition (indexOut);\n}\n",
"SubdivisionPre.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform sampler2D sampler;\nvarying vec2 texCoord[2];\n\nbool validOutgoingEdge () {\n    vec3 next = texture2D (sampler, texCoord[1]).xyz;\n    return distance (gl_FragColor.xy, next.xy) < min (gl_FragColor.z, next.z);\n}\n\nvoid main(void) {\n    gl_FragColor = texture2D (sampler, texCoord[0]);\n    if (gl_FragColor.w == 1.0 && validOutgoingEdge ())\n        gl_FragColor.w = 0.0;\n}\n",
"SubdivisionPre.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute float index;\nvarying vec2 texCoord[2];\n\nvoid main (void) {\n    gl_Position = indexedPosition (index);\n    float j = 1.0;\n    if (mod (index, 3.0) > 1.0)\n        j = -2.0;\n    texCoord[0] = uvPosition (index);\n    texCoord[1] = uvPosition (index + j);\n}\n","Surface.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform bool clipping;\nvarying vec4 vPos;\nvarying vec2 v_value;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    if (clipping && vPos.y < 0.0)\n        discard;\n    float PI = acos (-1.0);\n    float angle = atan (v_value.y, v_value.x);\n    float blackp = sawfct (angle, PI / 12.0, 0.7, 1.0);\n    float blackm = sawfct (log (length (v_value)), PI / 12.0, 0.7, 1.0);\n    float black = blackp * blackm;\n    gl_FragColor = vec4 (black * hue_to_rgb (angle), gl_FragCoord.z);\n}\n",
"Surface.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 m;\nuniform mat4 v;\nuniform mat4 p;\nuniform sampler2D sampler;\nattribute float index;\nvarying vec4 vPos;\nvarying vec2 v_value;\nvoid main (void)\n{\n    vec4 posValue = texture2D (sampler, uvPosition (index));\n    vPos = vec4 (posValue.xyz, 1.0);\n    v_value = posValue.zw;\n    gl_Position = p * v * m * vPos;\n}\n","Textures.glsl":"#define W 2048.0\n#define H 2048.0\nvec2 uvPosition (in float i) {\n    const float h = 2048.0;\n    return vec2 (mod (i, W) / W + 0.5 / W, floor (i / W) / H + 0.5 / H);\n}\n\nvec4 indexedPosition (in float i) {\n    float x = mod (i, W) / W;\n    float y = floor (i / W) / H;\n    return vec4 (x * 2.0 - 1.0 + 1.0 / W, y * 2.0 - 1.0 + 1.0 / H, 0.0, 1.0);\n}\n"};function aa(a,c){var b=t("Assembly");b[0]=[c.D,b[0]].join("\n");b[1]=u(c,b[1]);this.f=v(a,b)}aa.prototype.f=null;
aa.prototype.s=function(a,c,b){var d=c.m,e=c.v[0];b.useProgram(this.f);var f=c.o;b.uniform1f(b.getUniformLocation(this.f,"numIndices"),f);w(c,a);b.vertexAttribPointer(0,1,b.FLOAT,!1,0,0);b.bindFramebuffer(b.FRAMEBUFFER,c.G);b.bindTexture(b.TEXTURE_2D,e);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,e,0);b.bindTexture(b.TEXTURE_2D,null);for(var e=[],g=0,h=d.length;g<h;g++)b.activeTexture(b.TEXTURE0+g),b.bindTexture(b.TEXTURE_2D,d[g]),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,
b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),e[g]=g;b.uniform1iv(b.getUniformLocation(this.f,"samplers"),e);b.disable(b.DEPTH_TEST);b.viewport(0,0,2048,2048);d=b.getUniformLocation(this.f,"sheet");e=0;for(g=c.J;e<g;e++)b.uniform1f(d,e),b.drawArrays(b.POINTS,0,f);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,null,0);b.bindFramebuffer(b.FRAMEBUFFER,
null);b=c.m;c.m=c.v;c.v=b;c.o*=c.J;w(c,a)};function ba(a,c,b,d){d=d?d:function(){};var e=this;e.qa=b?b:null;ca(e,c,function(){var b=e.la,c=a.j;e.da=b.byteLength/16;c.enableVertexAttribArray(0);e.U=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,e.U);c.bufferData(c.ARRAY_BUFFER,new Float32Array(b),c.STATIC_DRAW);e.S=v(a,t("CachedSurface"));d()})}k=ba.prototype;k.pa="";function ca(a,c,b){a.pa=c;var d=new XMLHttpRequest;d.open("GET",c,!0);d.responseType="arraybuffer";d.onload=function(){a.la=d.response;b()};d.send()}k.qa=null;k.la=null;k.U=null;
k.S=null;k.s=function(a,c,b){this.S&&(c.useProgram(this.S),da(a),ea(a,"m",fa(b.w)),ga(a,b),ha(a,b),ia(a),c.bindBuffer(c.ARRAY_BUFFER,this.U),c.vertexAttribPointer(0,4,c.FLOAT,!1,0,0),c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT),c.drawArrays(c.TRIANGLES,0,this.da),ia(a,!1))};k.da=0;function y(a,c){this.f=a;this.g=c}y.prototype.abs=function(){return Math.sqrt(this.f*this.f+this.g*this.g)};function z(a,c){return new y(a.f+c.f,a.g+c.g)}function C(a,c){var b=c.f*c.f+c.g*c.g;return new y((a.f*c.f+a.g*c.g)/b,(a.g*c.f-a.f*c.g)/b)}y.prototype.g=0;var ja=new y(Infinity,Infinity);function D(a,c){return new y(a.f*c.f-a.g*c.g,a.f*c.g+a.g*c.f)}function ka(a){return new y(-a.f,-a.g)}var la=new y(1,0);y.prototype.f=0;function E(a){return new y(a,0)}
function ma(a){if(!a.f&&!a.g)return F();var c=a.abs();return new y(Math.sqrt(.5*(c+a.f)),(Math.sign(a.g)||1)*Math.sqrt(.5*(c-a.f)))}function G(a,c){return new y(a.f-c.f,a.g-c.g)}function F(){return new y(0,0)};function H(a){var c=a.type,b=a.value;if("infix"===c){c=H(a.first);a=H(a.second);if("+"===b)return na(c,a);if("-"===b)return na(c,oa(a));if("*"===b)return pa(c,a);if("^"===b){if(qa(a)&&(b=ra(a),0<=b.f&&!b.g))return sa(c,b.f);console.error("Illegal exponent")}else console.error("Infix operator '"+b+"' not implemented")}else if("prefix"===c){c=H(a.first);if("+"===b)return c;if("-"===b)return oa(c);console.error("Prefix operator '"+b+"' not implemented")}else{if("number"===c)return new I([new J(E(parseFloat(b)),
new K({}))]);if("variable"===c)return c={},c[b]=1,new I([new J(la,new K(c))]);if("imaginary"===c)return new I([new J(new y(0,1),new K({}))])}return null}
function ta(a){function c(b,a){function c(b,a){return{type:"infix",value:a[0].value,first:b,second:a[1]}}return a===[]?b:a.reduce(c,b)}function b(b){b=L(ua(va(l,d),d),wa(L(l,d)))(b);return null===b?null:c(b[0],b[1])}function d(b){b=L(e,wa(L(n,e)))(b);return null===b?null:c(b[0],b[1])}function e(a){var c=ua(xa(b),g,h,m)(a);return null===c?null:(a=f(a))?{type:"infix",value:"^",first:c,second:a}:c}function f(b){var a=L(p,g)(b);return null===a?null:(b=f(b))?{type:"infix",value:"^",first:a[1],second:b}:
a[1]}a=ya(a);var g=za("number"),h=za("imaginary"),m=za("variable"),l=ua(M("+"),M("-")),n=M("*"),p=M("^");return function(a){return(a=L(b,Aa)(a))?a[0]:null}(a)};var O=5/12*Math.PI,P=Math.PI/6;function Ba(a,c,b,d){c=void 0===c?O:c;b=void 0===b?P:b;this.f=a;c=Q(c,b);b=new Ca;b.O=void 0===d?!1:d;b.w=b.R=b.A=c;this.u=b;this.C=new Da(a);Ea(this)}function Fa(a,c,b){var d,e,f;d=void 0===d?O:d;e=void 0===e?P:e;f=void 0===f?!1:f;c=H(ta(c));d=void 0===d?O:d;e=void 0===e?P:e;a=new Ba(a,d,e,void 0===f?!1:f);f=a.C;f.V=new Ga(f,c,b);a.l();return a}
function Ha(a,c,b){var d=void 0,e=void 0,f=void 0,d=void 0===d?O:d,e=void 0===e?P:e,f=void 0===f?!1:f;b=b?b:function(){};var g=H(ta("")),h=new Ba(a,d,e,f);a=h.C;a.V=new ba(a,c,g,function(){h.l();b()});return h}
function Ea(a){var c=a.f,b=a.u;a.g=function(c){c.preventDefault();b.B||(Ia(b,[c.clientX,c.clientY]),a.l())};a.h=function(a){a.preventDefault();Ja(b,a.clientX,a.clientY)};a.i=function(a){a.preventDefault();b.N=[0,0];b.H=!1};a.ja=function(c){c.preventDefault();c=c.touches[0];Ia(b,[c.clientX,c.clientY]);a.l()};a.M=function(a){a.preventDefault();a=a.touches[0];Ja(b,a.clientX,a.clientY)};a.L=function(a){a.preventDefault();b.N=[0,0];b.H=!1};a.ka=function(c){c.preventDefault();b.F=0<c.deltaY?Math.min(4,
b.F+.1):Math.max(.5,b.F-.1);a.l()};c.addEventListener("mousedown",a.g);c.addEventListener("mousemove",a.h);c.addEventListener("mouseup",a.i);c.addEventListener("touchstart",a.ja);c.addEventListener("touchmove",a.M);c.addEventListener("touchend",a.L);c.addEventListener("wheel",a.ka)}k=Ba.prototype;k.l=function(){var a=this.u,c=this;this.C.l(a);if(a.B||a.H||1E-6<Ka(a.w,a.A).abs())La(a),requestAnimationFrame(function(){c.l()})};function R(a,c,b){a.u.B=!1;a.u.A=a.u.R=a.u.w;a.u.A=Q(c,b);a.l()}
k.$=function(a){this.u.$(a);this.l()};k.aa=function(a){this.C.aa(a);this.l()};k.ba=function(a){this.u.ba(a);this.l()};k.ca=function(a){this.C.ca(a);this.l()};k.oa=function(){var a=this.f;a.removeEventListener("mousedown",this.g);a.removeEventListener("mousemove",this.h);a.removeEventListener("mouseup",this.i);a.removeEventListener("touchstart",this.ja);a.removeEventListener("touchmove",this.M);a.removeEventListener("touchend",this.L);a.removeEventListener("wheel",this.ka)};function S(a){var c=[],b,d;if(qa(a))return[T(ra(a))];if(1===U(a).length)for(a=Ma(a),b=0,d=a.length;b<d;b++)c[b]=T(a[b]);else if(2===U(a).length){b=U(a);var e=b[0];a=V(a,b[1]);b=0;for(d=a.length;b<d;b++)c[b]=W(e,S(a[b]))}return c}function T(a){return"vec2 ("+a.f.toPrecision(8)+", "+a.g.toPrecision(8)+")"}
function Na(a,c){a=S(a).reverse();for(var b=Oa-a.length+1,d=T(F()),e=0;e<b;e++)a.push(d);c=["void f (in vec2 "+c+", out vec2 cs[N+1])","{"];for(b=0;b<=Oa;b++)c.push("cs["+b+"] = "+a[b]+";");c.push("}");return c.join("\n")}function Pa(a,c,b){a=V(Qa(a,c),b);for(var d=[],e=0,f=a.length;e<f;e++)d[e]=W(c,S(a[e]));return["vec2 fx (in vec2 "+c+", in vec2 "+b+")","{","    return "+W(b,d)+";","}"].join("\n")}
function Ra(a,c,b){a=V(Qa(a,b),c);for(var d=[],e=0,f=a.length;e<f;e++)d[e]=W(b,S(a[e]));return["vec2 fy (in vec2 "+c+", in vec2 "+b+")","{","    return "+W(c,d)+";","}"].join("\n")}function W(a,c){for(var b=c[0],d=1,e=c.length;d<e;d++)b="vec2 (1.0000000, 0.0000000)"===b?a:"vec2 (-1.0000000, 0.0000000)"===b?"-"+a:"cm ("+a+","+b+")","vec2 (0.0000000, 0.0000000)"!==c[d]&&(b+="+"+c[d]);return b}
function Sa(a,c,b){var d,e,f,g,h=V(a,b);d=0;for(f=h.length;d<f;d++){var m=h[d].f;e=0;for(g=m.length;e<g;e++){var l=m[e];m[e]=new J(E(l.g.abs()),l.f)}h[d]=new I(m)}d=h[0];d=Ta(d,c,Y(d,c));a=Ta(a,b,Y(a,b));a=Ua(Ma(a));b=["float M (in vec2 "+c+", in float rho)","{","    vec2 r = vec2 (length ("+c+") + rho, 0.0);","    float a["+h.length+"];","    a[0] = length ("+T(ra(d))+");"];d=0;for(f=a.length;d<f;d++)b.push("    a[0] *= distance ("+c+", "+T(a[d])+") - rho;");d=1;for(f=h.length;d<f;d++)b.push("    a["+
d+"] = length ("+W("r",S(h[d]))+");");b=b.concat(["    float m = a[1] / a[0];","    for (int j = 2; j < "+h.length+"; j++) {","        m = max (m, pow (a[j] / a[0], 1.0 / float (j)));","    }","    return 2.0 * m;","}"]);return b.join("\n")}
function Va(a,c,b){var d=Ta(a,b,Y(a,b)),e=Qa(a,b);b=Wa(b,a,e);e=b.f;(a=e.length)||console.error("matrix must be non-empty");for(var f=0;f<a;f++)e[f].length!==a&&console.error("matrix must be square");f=b;for(e=1;e<a;e++){for(var f=f.f,g=f[0][0].g(),h=[],m=0,l=f.length;m<l;m++){h[m]=[];for(var n=0;n<l;n++)if(n<m)h[m][n]=g;else if(n===m){for(var p=g,q=n+1;q<l;q++)var A=oa(f[q][q]),p=na(p,A);h[m][n]=p}else h[m][n]=f[m][n]}f=(new Xa(h)).f;g=b.f;f[0].length!==g.length&&console.error("matrix dimensions must match");
h=[];m=f.length;l=g[0].length;n=f[0][0].g();for(p=0;p<m;p++)for(h[p]=[],q=0;q<l;q++){for(var A=n,x=0,N=f[0].length;x<N;x++)var B=pa(f[p][x],g[x][q]),A=na(A,B);h[p][q]=A}f=new Xa(h)}b=f.f[0][0];a=a%2?b:oa(b);d=Ua(Ma(d));f=Ua(Ma(a));e=[];a=0;for(b=d.length;a<b;a++)isFinite(d[a].abs())&&e.push(d[a]);a=0;for(b=f.length;a<b;a++)isFinite(f[a].abs())&&e.push(f[a]);d=["float rho (in vec2 "+c+") {","    float d = 100.0;"];a=0;for(b=e.length;a<b;a++)d.push("    d = min (d, distance ("+c+", "+T(e[a])+"));");
d=d.concat(["    return 0.999 * d;","}"]);return d.join("\n")}var Oa=8;function Ya(a,c){var b=Za(),d=a.j;c.o=b.length/2;d.enableVertexAttribArray(0);c.T=d.createBuffer();w(c,a);d.enableVertexAttribArray(1);this.g=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,this.g);d.bufferData(d.ARRAY_BUFFER,new Float32Array(b),d.STATIC_DRAW);c.G=d.createFramebuffer();b=t("Initial");b[0]=[c.D,b[0]].join("\n");b[1]=u(c,b[1]);this.f=v(a,b)}Ya.prototype.g=null;Ya.prototype.f=null;
Ya.prototype.s=function(a,c,b){a=c.m;var d=c.v;b.useProgram(this.f);b.enableVertexAttribArray(0);b.bindBuffer(b.ARRAY_BUFFER,c.T);b.vertexAttribPointer(0,1,b.FLOAT,!1,0,0);b.enableVertexAttribArray(1);b.bindBuffer(b.ARRAY_BUFFER,this.g);b.vertexAttribPointer(1,2,b.FLOAT,!1,0,0);b.bindFramebuffer(b.FRAMEBUFFER,c.G);b.disable(b.DEPTH_TEST);b.viewport(0,0,2048,2048);for(var e=b.getUniformLocation(this.f,"computedRoots"),f=c.J,g,h=0;h<=f+1;h+=2)g=h<f?h/2+1:0,b.bindTexture(b.TEXTURE_2D,d[g]),b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,2048,2048,0,b.RGBA,b.FLOAT,null),b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,d[g],0),b.uniform1i(e,h),b.drawArrays(b.POINTS,0,c.o);g=0;for(e=d.length;g<e;g++)b.activeTexture(b.TEXTURE0+g),b.bindTexture(b.TEXTURE_2D,null);
b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,null,0);b.bindFramebuffer(b.FRAMEBUFFER,null);b.bindBuffer(b.ARRAY_BUFFER,null);b.disableVertexAttribArray(1);c.m=d;c.v=a};function Xa(a){this.f=a}Xa.prototype.f=null;function Za(){for(var a=[],c=-10;10>c;c++)for(var b=-10;10>b;b++)a=(c+b)%2?a.concat([c,b,c+1,b+1,c,b+1,c,b,c+1,b,c+1,b+1]):a.concat([c,b,c+1,b,c,b+1,c+1,b,c+1,b+1,c,b+1]);return a.map(function(a){return a/2})};function $a(a,c,b){return a+b*(c-a)};function K(a){this.value=a}function ab(a){var c={};a=a.value;for(var b in a)c[b]=a[b];return new K(c)};function L(a){var c=arguments;return function(a){for(var d,e=[],f=0,g=c.length;f<g;f++)if(d=(0,c[f])(a))e.push(d);else return Array.prototype.unshift.apply(a,e),null;return e}}function xa(a){var c=M("("),b=M(")");return function(d){return(d=L(c,a,b)(d))?d[1]:null}}function Aa(a){return a.length?null:!0}function za(a){return function(c){return(c[0]||{}).type===a?c.shift():null}}function wa(a){return function(c){for(var b=a(c),d=[];null!==b;)d.push(b),b=a(c);return d}}
function ua(a){var c=arguments;return function(a){for(var d,e=0,f=c.length;e<f;e++)if(d=(0,c[e])(a))return d;return null}}function va(a,c){return function(b){b=L(a,c)(b);return null===b?null:{type:"prefix",value:b[0].value,first:b[1]}}}function M(a){return function(c){return(c[0]||{}).value===a?c.shift():null}};function I(a){a.length?this.f=bb(a):this.f=[new J(F(),new K({}))]}function na(a,c){return new I(bb(a.f.concat(c.f)))}function Ta(a,c,b){a=a.f;for(var d=[],e=0,f=a.length;e<f;e++){var g=a[e];if((g.f.value[c]||0)===b){var h=ab(g.f);delete h.value[c];d.push(new J(g.g,h))}}return new I(d)}function V(a,c){for(var b=Y(a,c),d=[],e=0;e<=b;e++)d[e]=Ta(a,c,b-e);return d}
function Ma(a){var c=U(a),b=c.length;1<b&&console.error("Polynomial is not univariate");a=V(a,0<b?c[0]:"x");for(var c=[],b=0,d=a.length;b<d;b++)c[b]=ra(a[b]);return c}function ra(a){var c=F();a=a.f;for(var b=0,d=a.length;b<d;b++){var e=a[b],f=e.f.value;f&&Object.keys(f).length||(c=z(c,e.g))}return c}function Y(a,c){var b=0;a=a.f;for(var d=0,e=a.length;d<e;d++)b=Math.max(b,a[d].f.value[c]||0);return b}
function Qa(a,c){a=a.f;for(var b=[],d=0,e=a.length;d<e;d++){var f=a[d].f,g=f.value[c]||0;if(0<g){var h=D(a[d].g,E(g)),f=ab(f);f.value[c]=g-1;b.push(new J(h,f))}}return new I(b)}function qa(a){return!U(a).length&&!!a.f.length}
function cb(a,c,b){for(var d=a.length-1,e=[1,.3141,.5926,.5358,.9793,.2385,.6264,.3383,.2795,.0288],f,g,h,m,l=1;l<=b;l++){h=F();f=F();g=a[0];for(m=1;m<=d;m++)h=z(f,D(h,c)),f=z(g,D(f,c)),g=z(a[m],D(g,c));if(1E-14>g.abs())break;f=C(f,g);m=D(f,f);g=G(m,C(D(E(2),h),g));h=ma(D(E(d-1),G(D(E(d),g),m)));g=z(f,h);f=G(f,h);g.abs()<f.abs()&&(g=f);f=1E-14<g.abs()?C(E(d),g):D(E(c.abs()+1),new y(Math.cos(l),Math.sin(l)));if(1E-14>f.abs())break;!(l%20)&&l<b-19&&(f=D(f,E(e[Math.floor(l/20)])));c=G(c,f)}return c}
function pa(a,c){a=a.f;c=c.f;for(var b=[],d=0,e=a.length;d<e;d++)for(var f=0,g=c.length;f<g;f++){var h=a[d],m=c[f],l={},n=h.f.value,p=m.f.value,q=void 0;for(q in n)l[q]=n[q]+(p[q]||0);for(q in p)l[q]=p[q]+(n[q]||0);b.push(new J(D(h.g,m.g),new K(l)))}return new I(bb(b))}function oa(a){a=a.f;for(var c=[],b=0,d=a.length;b<d;b++){var e=a[b];c.push(new J(ka(e.g),e.f))}return new I(c)}
function sa(a,c){var b=new I([new J(E(1),new K({}))]);for(Number.isInteger(c)||console.error("Non-integer power of Polynomial!");0<c;c--)b=pa(b,a);return b}I.prototype.pow=function(a){return sa(this,a)};function db(a){var c=a[0],b=a[1];a=a[2];if(!a.f&&!a.g)return[F(),ka(C(b,c))];var d=ma(G(D(b,b),D(E(4),D(c,a))));0<=b.f&&(d=ka(d));return[C(G(d,b),D(E(2),c)),C(D(E(2),a),G(d,b))]}
function Ua(a){var c=[],b=a,d=a.length-1;if(0>=d)return[];var e=a[0];if(!e.f&&!e.g)return c=Ua(a.slice(1)),c.push(ja),c;if(1===d)c[0]=ka(C(a[1],a[0]));else if(2===d)c=db(a);else{for(e=0;e<d-2;e++){c[e]=cb(a,F(),200);c[e]=cb(b,c[e],1);for(var f=c[e],g=[a[0]],h=1,m=a.length-1;h<m;h++)g[h]=z(a[h],D(g[h-1],f));a=g}b=db(a);c[d-2]=b[0];c[d-1]=b[1]}return c}
function Wa(a,c,b){function d(a){for(var b=[],c=0;c<a;c++)b[c]=eb();return b}function e(a,b){return d(b).concat(a).concat(d(f+g-a.length-b))}var f=Y(c,a),g=Y(b,a);c=V(c,a);a=V(b,a);b=[];for(var h=0;h<g;h++)b.push(e(c,h));for(c=0;c<f;c++)b.push(e(a,c));return new Xa(b)}I.prototype.f=null;function U(a){a=a.f;for(var c=[],b={},d=0,e=a.length;d<e;d++){var f=a[d].f.value,g;for(g in f)b[g]||(c.push(g),b[g]=!0)}c.sort();return c}function eb(){return new I([])}I.prototype.g=eb;function Z(a,c,b,d){this.i=a;this.f=c;this.g=b;this.h=d}Z.prototype.abs=function(){return Math.sqrt(this.i*this.i+this.f*this.f+this.g*this.g+this.h*this.h)};function Q(a,c){a=-a/2;c=-c/2;return fb(new Z(Math.cos(a),Math.sin(a),0,0),new Z(Math.cos(c),0,0,Math.sin(c)))}function gb(a,c,b){return new Z($a(a.i,c.i,b),$a(a.f,c.f,b),$a(a.g,c.g,b),$a(a.h,c.h,b))}
function fb(a,c){return new Z(a.i*c.i-a.f*c.f-a.g*c.g-a.h*c.h,a.i*c.f+a.f*c.i+a.g*c.h-a.h*c.g,a.i*c.g-a.f*c.h+a.g*c.i+a.h*c.f,a.i*c.h+a.f*c.g-a.g*c.f+a.h*c.i)}function hb(a){var c=a.abs();return new Z(a.i/c,a.f/c,a.g/c,a.h/c)}function fa(a){var c=a.i,b=a.f,d=a.g;a=a.h;return[c*c+b*b-d*d-a*a,2*b*d+2*c*a,2*b*a-2*c*d,0,2*b*d-2*c*a,c*c-b*b+d*d-a*a,2*d*a+2*c*b,0,2*b*a+2*c*d,2*d*a-2*c*b,c*c-b*b-d*d+a*a,0,0,0,0,c*c+b*b+d*d+a*a]}function Ka(a,c){return new Z(a.i-c.i,a.f-c.f,a.g-c.g,a.h-c.h)};function Ca(){}k=Ca.prototype;k.B=!1;k.N=[0,0];k.O=!1;k.H=!1;k.w=Q(0,0);k.R=Q(0,0);k.A=Q(0,0);k.F=1;function Ia(a,c){a.B||(a.N=c,a.H=!0,a.R=a.A)}function Ja(a,c,b){if(a.H){var d=a.N;c-=d[0];b=d[1]-b;var d=Math.sqrt(c*c+b*b),e=a.R,f=d/Math.sqrt(1E4+d*d);a.A=hb(gb(e,fb(new Z(100/Math.sqrt(1E4+d*d),-f*b,f*c,0),e),.05))}}k.$=function(a){this.B=a};k.ba=function(a){this.O=a};function La(a){if(a.B){var c=hb(new Z(.01,0,0,1)),c=fb(c,c);a.w=a.A=fb(a.w,c)}else a.w=hb(gb(a.w,a.A,.1))};function Da(a){a=this.j=a.getContext("webgl",{preserveDrawingBuffer:!0});a.enable(a.DEPTH_TEST);a=this.j;var c=Math.min(a.getParameter(a.MAX_TEXTURE_SIZE),8192);this.ea=c;this.W=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,this.W);a.bufferData(a.ARRAY_BUFFER,new Float32Array([-1,-1,3,-1,-1,3]),a.STATIC_DRAW);a.vertexAttribPointer(0,2,a.FLOAT,!1,0,0);a.enableVertexAttribArray(0);this.ma=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,this.ma);this.X=a.createRenderbuffer();a.bindRenderbuffer(a.RENDERBUFFER,
this.X);a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,c,c);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,this.X);this.P=a.createTexture();a.bindTexture(a.TEXTURE_2D,this.P);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,c,c,0,a.RGBA,a.UNSIGNED_BYTE,null);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.P,0);this.Y=a.createFramebuffer();
a.bindFramebuffer(a.FRAMEBUFFER,this.Y);this.Z=a.createRenderbuffer();a.bindRenderbuffer(a.RENDERBUFFER,this.Z);a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,2048,2048);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,this.Z);this.I=a.createTexture();a.bindTexture(a.TEXTURE_2D,this.I);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,2048,2048,0,a.RGBA,a.UNSIGNED_BYTE,
null);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.I,0);a.bindTexture(a.TEXTURE_2D,null);a.bindRenderbuffer(a.RENDERBUFFER,null);a.bindFramebuffer(a.FRAMEBUFFER,null);a.bindBuffer(a.ARRAY_BUFFER,null);this.ia=v(this,t("FXAA"))}k=Da.prototype;k.ea=8192;k.fa=!1;k.ia=null;function ib(a,c){void 0===a[c]&&(a[c]=a.j.getExtension(c),a[c]||alert("Required extension "+c+" not supported. Please try another browser or platform."))}
function t(a){return[r[a+".vert"],r[a+".frag"]]}k.j=null;
function v(a,c){a=a.j;var b=c[1],d=a.createShader(a.VERTEX_SHADER);a.shaderSource(d,c[0]);a.compileShader(d);a.getShaderParameter(d,a.COMPILE_STATUS)||console.log(a.getShaderInfoLog(d));c=a.createShader(a.FRAGMENT_SHADER);a.shaderSource(c,b);a.compileShader(c);a.getShaderParameter(c,a.COMPILE_STATUS)||console.log(a.getShaderInfoLog(c));b=a.createProgram();a.attachShader(b,d);a.attachShader(b,c);a.linkProgram(b);a.getProgramParameter(b,a.LINK_STATUS)||console.log(a.getProgramInfoLog(b));a.useProgram(b);
return b}
function jb(a,c){var b=a.j,d=b.getParameter(b.FRAMEBUFFER_BINDING),e=b.createFramebuffer();b.bindFramebuffer(b.FRAMEBUFFER,e);b.bindTexture(b.TEXTURE_2D,c);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,c,0);if(b.checkFramebufferStatus(b.FRAMEBUFFER)!==b.FRAMEBUFFER_COMPLETE)return b.bindTexture(b.TEXTURE_2D,
null),b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,null,0),b.bindFramebuffer(b.FRAMEBUFFER,d),b.deleteFramebuffer(e),null;if(c===a.I)a=new Uint8Array(16777216),b.readPixels(0,0,2048,2048,b.RGBA,b.UNSIGNED_BYTE,a);else if(c===a.P)c=a.ea,a=new Uint8Array(4*c*c),b.readPixels(0,0,c,c,b.RGBA,b.UNSIGNED_BYTE,a);else{a=new Float32Array(16777216);if(b.getParameter(b.IMPLEMENTATION_COLOR_READ_TYPE)!==b.FLOAT)return console.error("Reading from float textures not supported. Please try another browser or platform."),
null;b.readPixels(0,0,2048,2048,b.RGBA,b.FLOAT,a)}c=b.getError();b.bindTexture(b.TEXTURE_2D,null);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,null,0);b.bindFramebuffer(b.FRAMEBUFFER,d);b.deleteFramebuffer(e);return c!==b.NO_ERROR?null:a}k.V=null;k.l=function(a){var c=this.j,b=this;kb(this,function(){b.V.s(b,c,a)})};k.W=null;k.ma=null;k.X=null;k.P=null;k.Y=null;k.Z=null;k.I=null;k.aa=function(a){this.fa=a};k.ca=function(a){this.na=a};k.na=!1;
function da(a){var c=a.j;c.uniform1f(c.getUniformLocation(c.getParameter(c.CURRENT_PROGRAM),"clipping"),a.fa?1:0)}function ha(a,c){var b=a.j,d=b.getParameter(b.VIEWPORT),b=d[2],d=d[3];if(c.O){var e=c.F;c=-7.5*e;var f=-7.5*e,g=7.5*e,e=7.5*e,h=Math.min(d/b,1),b=Math.min(b/d,1),b=[2*h/(g-f),0,0,0,0,2*b/(e-c),0,0,0,0,-.01,0,-h*(g+f)/(g-f),-b*(e+c)/(e-c),-0,1]}else c=1/Math.tan(45*c.F/2*Math.PI/180),b=[c/(0<d?b/d:b),0,0,0,0,c,0,0,0,0,101/-99,-1,0,0,200/-99,0];ea(a,"p",b)}
function ia(a,c){var b=a.j;a.na&&!1!==c?(b.blendFunc(b.SRC_ALPHA,b.ONE),b.enable(b.BLEND),b.disable(b.DEPTH_TEST)):(b.disable(b.BLEND),b.enable(b.DEPTH_TEST),b.depthFunc(b.LESS))}function ea(a,c,b){a=a.j;a.uniformMatrix4fv(a.getUniformLocation(a.getParameter(a.CURRENT_PROGRAM),c),!1,b)}function ga(a,c){ea(a,"v",c.O?[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,-20,1])}
function kb(a,c){var b=a.j;b.bindFramebuffer(b.FRAMEBUFFER,a.Y);b.viewport(0,0,2048,2048);c();b.viewport(0,0,b.canvas.width,b.canvas.height);b.bindFramebuffer(b.FRAMEBUFFER,null);c=a.j;b=a.ia;c.useProgram(b);var d=c.getUniformLocation(b,"width");c.uniform1f(d,c.canvas.width);d=c.getUniformLocation(b,"height");c.uniform1f(d,c.canvas.height);c.bindBuffer(c.ARRAY_BUFFER,a.W);c.vertexAttribPointer(0,2,c.FLOAT,!1,0,0);c.activeTexture(c.TEXTURE0);c.bindTexture(c.TEXTURE_2D,a.I);c.clear(c.COLOR_BUFFER_BIT|
c.DEPTH_BUFFER_BIT);c.drawArrays(c.TRIANGLES,0,3)};function lb(a,c){var b=t("Subdivision");b[0]=[c.D,b[0]].join("\n");b[1]=u(c,b[1]);this.f=v(a,b)}lb.prototype.f=null;
lb.prototype.s=function(a,c,b){var d,e=c.m,f=c.v,g=this.f;b.useProgram(g);var h=jb(a,e[0]),m=[0,1,0,0,1,0,1,0,2,0,0,1,0,1,0,0,1,0,1,0,2,.5,0,.5,3,0,1,0,4,0,0,1,5,.5,0,.5,0,1,0,0,1,0,1,0,2,0,.5,.5,3,0,.5,.5,4,0,0,1,5,1,0,0,0,1,0,0,1,0,1,0,2,.5,0,.5,3,0,.5,.5,4,0,0,1,5,.5,0,.5,6,.5,0,.5,7,0,1,0,8,0,.5,.5,0,1,0,0,1,.5,.5,0,2,0,0,1,3,0,0,1,4,.5,.5,0,5,0,1,0,0,1,0,0,1,.5,.5,0,2,.5,0,.5,3,.5,0,.5,4,.5,.5,0,5,0,0,1,6,0,1,0,7,0,0,1,8,.5,.5,0,0,1,0,0,1,.5,.5,0,2,0,.5,.5,3,0,0,1,4,1,0,0,5,0,.5,.5,6,0,.5,.5,
7,.5,.5,0,8,0,1,0,0,1,0,0,1,.5,.5,0,2,.5,0,.5,3,.5,.5,0,4,0,1,0,5,0,.5,.5,6,0,.5,.5,7,0,0,1,8,.5,0,.5,9,.5,.5,0,10,0,.5,.5,11,.5,0,.5],l=[0,3,9,15,24,30,39,48],n=[3,6,6,9,6,9,9,12];b.bindFramebuffer(b.FRAMEBUFFER,c.G);var p=[];a=0;for(d=e.length;a<d;a++)b.activeTexture(b.TEXTURE0+a),b.bindTexture(b.TEXTURE_2D,e[a]),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),p[a]=a;b.uniform1iv(b.getUniformLocation(g,"oldSamplers"),p);b.disable(b.DEPTH_TEST);b.viewport(0,0,2048,2048);var g=b.getUniformLocation(this.f,"computedRoots"),p=c.J,q=[],A=[],x=[],N=0;a=0;for(d=c.o/3;a<d;a++){var B=4*h[12*a+3]+2*h[12*a+7]+h[12*a+11],X=l[B],B=n[B];x.push(m.slice(4*X,4*(X+B)));for(X=0;X<B;X++)q.push(3*a),A.push(N);N+=B}x=Array.prototype.concat.apply([],x);h=b.createBuffer();b.enableVertexAttribArray(0);b.bindBuffer(b.ARRAY_BUFFER,
h);b.bufferData(b.ARRAY_BUFFER,new Float32Array(x),b.STATIC_DRAW);b.vertexAttribPointer(0,4,b.FLOAT,!1,0,0);m=b.createBuffer();b.enableVertexAttribArray(1);b.bindBuffer(b.ARRAY_BUFFER,m);b.bufferData(b.ARRAY_BUFFER,new Float32Array(q),b.STATIC_DRAW);b.vertexAttribPointer(1,1,b.FLOAT,!1,0,0);l=b.createBuffer();b.enableVertexAttribArray(2);b.bindBuffer(b.ARRAY_BUFFER,l);b.bufferData(b.ARRAY_BUFFER,new Float32Array(A),b.STATIC_DRAW);b.vertexAttribPointer(2,1,b.FLOAT,!1,0,0);for(d=0;d<=p+1;d+=2)a=d<p?
d/2+1:0,b.activeTexture(b.TEXTURE0+e.length),b.bindTexture(b.TEXTURE_2D,f[a]),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,2048,2048,0,b.RGBA,b.FLOAT,null),b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,f[a],0),b.uniform1i(g,d),b.drawArrays(b.POINTS,0,N);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,null,0);a=0;for(d=e.length+1;a<d;a++)b.activeTexture(b.TEXTURE0+
a),b.bindTexture(b.TEXTURE_2D,null);b.bindFramebuffer(b.FRAMEBUFFER,null);b.bindBuffer(b.ARRAY_BUFFER,null);b.deleteBuffer(m);b.deleteBuffer(l);b.deleteBuffer(h);b.disableVertexAttribArray(1);b.disableVertexAttribArray(2);c.o=N;c.m=f;c.v=e};function mb(a,c){var b=t("SubdivisionPre");b[0]=[c.D,b[0]].join("\n");this.f=v(a,b)}mb.prototype.f=null;
mb.prototype.s=function(a,c,b){var d=c.m[0],e=c.v[0];b.useProgram(this.f);w(c,a);b.vertexAttribPointer(0,1,b.FLOAT,!1,0,0);b.bindFramebuffer(b.FRAMEBUFFER,c.G);b.bindTexture(b.TEXTURE_2D,e);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,e,0);b.bindTexture(b.TEXTURE_2D,null);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,d);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.uniform1i(b.getUniformLocation(this.f,"sampler"),0);b.disable(b.DEPTH_TEST);b.viewport(0,0,2048,2048);b.drawArrays(b.POINTS,0,c.o);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,null,0);b.bindFramebuffer(b.FRAMEBUFFER,null);b.bindBuffer(b.ARRAY_BUFFER,null);c.m[0]=e;c.v[0]=d};function Ga(a,c,b){ib(a,"OES_texture_float");var d=a.j;-1!==d.getSupportedExtensions().indexOf("WEBGL_color_buffer_float")&&ib(a,"WEBGL_color_buffer_float");for(var e=a.j,f=[],g=[],h=0;5>h;h++)f[h]=e.createTexture(),e.bindTexture(e.TEXTURE_2D,f[h]),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,2048,2048,0,e.RGBA,e.FLOAT,null),g[h]=e.createTexture(),e.bindTexture(e.TEXTURE_2D,g[h]),e.texParameteri(e.TEXTURE_2D,
e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,2048,2048,0,e.RGBA,e.FLOAT,null);e.bindTexture(e.TEXTURE_2D,null);this.m=f;this.v=g;e=this.m[0];f=a.j;g=f.getParameter(f.FRAMEBUFFER_BINDING);h=f.createFramebuffer();f.bindFramebuffer(f.FRAMEBUFFER,h);var m=f.createRenderbuffer();f.bindRenderbuffer(f.RENDERBUFFER,m);f.renderbufferStorage(f.RENDERBUFFER,f.DEPTH_COMPONENT16,2048,2048);f.framebufferRenderbuffer(f.FRAMEBUFFER,
f.DEPTH_ATTACHMENT,f.RENDERBUFFER,m);f.bindTexture(f.TEXTURE_2D,e);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE);f.framebufferTexture2D(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,f.TEXTURE_2D,e,0);var l=f.checkFramebufferStatus(f.FRAMEBUFFER),n=f.getError(),l=l===f.FRAMEBUFFER_COMPLETE&&n===f.NO_ERROR;f.bindTexture(f.TEXTURE_2D,
null);f.framebufferTexture2D(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,f.TEXTURE_2D,null,0);f.bindRenderbuffer(f.RENDERBUFFER,null);f.deleteRenderbuffer(m);f.bindFramebuffer(f.FRAMEBUFFER,g);f.deleteFramebuffer(h);e=!!jb(a,e);l&&e?e=!0:(alert((l||e?l?"Reading from float textures not supported.":"Rendering to float textures not supported.":"Rendering to and reading from float textures not supported.")+" Please try another browser or platform."),e=!1);if(e){this.g=c;this.f=b;b=this.g;e=U(b);this.J=Y(b,e.length?
e[e.length-1]:"y");this.ga=r["Common.glsl"];e=U(c);b=2>e.length?"x":e[0];e=e.length?e[e.length-1]:"y";this.ha=[["#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif","const int N = "+Oa+";","const int sheets = "+Y(c,e)+";","\n/* complex multiplication */\nvec2 cm (in vec2 a, in vec2 b)\n{\n    return vec2 (a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);\n}"].join("\n"),Na(c,b),Pa(c,b,e),Ra(c,b,e),Va(c,b,e),Sa(c,b,e)].join("\n\n");this.D=r["Textures.glsl"];
this.i=new Ya(a,this);this.i.s(a,this,d);this.M=new mb(a,this);this.L=new lb(a,this);for(c=0;c<this.f;c++)this.M.s(a,this,d),this.L.s(a,this,d);this.h=new aa(a,this);this.h.s(a,this,d);c=t("Surface");c[0]=[this.D,c[0]].join("\n");c[1]=u(this,c[1]);this.K=v(a,c);a=d.canvas;d.viewport(0,0,a.width,a.height)}}k=Ga.prototype;k.ga="";k.ha="";function w(a,c){c=c.j;for(var b=[],d=0;d<a.o;d++)b[d]=d;c.bindBuffer(c.ARRAY_BUFFER,a.T);c.bufferData(c.ARRAY_BUFFER,new Float32Array(b),c.STATIC_DRAW)}k.G=null;
k.T=null;k.o=0;k.K=null;
k.s=function(a,c,b){this.K&&(c.useProgram(this.K),da(a),ea(a,"m",fa(b.w)),ga(a,b),ha(a,b),ia(a),c.activeTexture(c.TEXTURE0),c.bindTexture(c.TEXTURE_2D,this.m[0]),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.uniform1i(c.getUniformLocation(this.K,"sampler"),0),w(this,a),c.vertexAttribPointer(0,1,c.FLOAT,
!1,0,0),c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT),c.drawArrays(c.TRIANGLES,0,this.o),ia(a,!1))};k.J=0;k.m=[];k.v=[];k.D="";function u(a,c){return[a.ha,a.ga,c].join("\n")};function J(a,c){this.g=a;this.f=c}J.prototype.g=null;J.prototype.f=null;
function bb(a){function c(a,d){if(d.length){if(1===d.length)return a.push(d[0]),a;for(var e=d.pop(),f=e.g,e=e.f,g=[],h=0,m=d.length;h<m;h++){var l;a:{l=e;var n=d[h].f,p=void 0;for(p in l.value)if(!n.value.hasOwnProperty(p)||l.value[p]!==n.value[p]){l=!1;break a}for(p in n.value)if(!l.value.hasOwnProperty(p)||l.value[p]!==n.value[p]){l=!1;break a}l=!0}l?f=z(f,d[h].g):g.push(d[h])}a.push(new J(f,e));return c(a,g)}return a}return c([],a)};function nb(){this.f=[["\\d*\\.\\d*","number"],["\\d+","number"],["i","imaginary"],["[a-hj-z]","variable"],["[\\+\\*\\^-]","operator"],["[\\(\\)]","parenthesis"]]}function ya(a){for(var c=(new nb).f,b="(?:",d=0,e=c.length;d<e;d++)b+=(0<d?"|(":"(")+c[d][0]+")";b=new RegExp(b+")","g");for(d=[];e=b.exec(a);){var f=e[0];d.push({type:c[e.slice(1).indexOf(f)][1],value:f})}return d};function ob(a){var c;c=c?c:null;return"list"!==a.ctype?(console.log("argument is not a list"),c):a.value}function pb(a,c){c=c?c:[.5,.5,.5];if("number"===a.ctype){var b=qb(a);if(!isNaN(b))return[b,b,b]}a=ob(a);return a?3!=a.length?(console.log("Not an RGB color vector"),c):a.map(function(a){return qb(a)}):c}
function rb(a,c){c=void 0===c?Number.NaN:c;if("number"!==a.ctype)return console.log("argument is not a number"),c;a=a.value;c=a.real;0!==a.imag&&console.log("complex number is not real");return c}function sb(a){var c=12,c=void 0===c?Number.NaN:c;if("number"!==a.ctype)return console.log("argument is not a number"),c;c=a.value;a=c.real;c=c.imag;0!==c&&console.log("complex number is not real");c=Math.round(a);c!==a&&console.log("number is not an integer");return c}
function qb(a,c){c=void 0===c?Number.NaN:c;a=rb(a,c);return 0>a?0:1<a?1:a}function tb(a,c){c=void 0===c?null:c;if("string"===a.ctype)return a.value;console.log("argument is not a string");return c}function ub(a){if("boolean"===a.ctype)return a.value;console.log("argument is not boolean");return!1};CindyJS.registerPlugin(1,"ComplexCurves",function(a){function c(a,b){var c,d;for(c in a)(d=b[c])?d(e(a[c])):console.log("Modifier "+c+" not supported")}function b(a,b){a=tb(a[0],"CSCanvas");var e=f[a];if(!e)return console.log("Unknown instance '"+a+"'"),d;var l=1,n=[0,0,0];c(b,{alpha:function(a){l=qb(a,l)},autorotate:function(a){e.$(ub(a))},background:function(a){n=pb(a,n)},clip:function(a){e.aa(ub(a))},ortho:function(a){e.ba(ub(a))},transparency:function(a){e.ca(ub(a))},view:function(a){switch(tb(a)){case "Back":R(e,
Math.PI/2,Math.PI);break;case "Bottom":R(e,Math.PI,0);break;case "Default":R(e,O,P);break;case "Front":R(e,Math.PI/2,0);break;case "Left":R(e,Math.PI/2,-Math.PI/2);break;case "Right":R(e,Math.PI/2,Math.PI/2);break;case "Top":R(e,0,0)}},zoom:function(a){a=rb(a,1);e.u.F=a||1;e.l()}});e.C.j.clearColor(n[0],n[1],n[2],l);e.l();return d}var d=a.nada,e=a.evaluate;a=a.defineFunction;var f={};a("ComplexCurves",1,b);a("ComplexCurves",2,function(a,c){var m=tb(a[0],"CSCanvas"),l=document.getElementById(m),n=
tb(a[1],"y^2-x"),p=12;void 0!==c.depth&&(p=sb(e(c.depth)));delete c.depth;f[m]&&f[m].oa&&f[m].oa();if(".bin"===n.substr(-4,4))var q=Ha(l,n,function(){f[m]=q;b([a[0]],c)});else f[m]=Fa(l,n,p),b([a[0]],c);return d})});
})();//# sourceMappingURL=ComplexCurves.js.map

